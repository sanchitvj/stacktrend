name: Deploy GitHub Collector to Azure Container Apps

on:
  push:
    branches: [ dev ]
    paths:
      - 'github_collector/**'
      - 'src/stacktrend/utils/**'
      - 'src/stacktrend/config/**'
      - 'requirements.txt'
      - 'docker_images/github-collector.Dockerfile'
      - '.github/workflows/deploy-azure-function.yml'

env:
  AZURE_CONTAINER_REGISTRY: gitcollector.azurecr.io
  AZURE_CONTAINER_APP: gitcollector-cont-app
  CONTAINER_ENVIRONMENT: gitcollector-cont-app-env
  IMAGE_NAME: gitcollector

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@v4

    - name: 'Login to Azure'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: 'Login to Azure Container Registry'
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.AZURE_CONTAINER_REGISTRY }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: 'Build and push Docker image'
      run: |
        docker build -f docker_images/github-collector.Dockerfile -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker build -f docker_images/github-collector.Dockerfile -t ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest .
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        docker push ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

    # Create or update Container App with managed identity for ACR access
    - name: 'Deploy to Azure Container Apps'
      run: |
        # Check if container app exists
        if az containerapp show --name ${{ env.AZURE_CONTAINER_APP }} --resource-group stacktrend &> /dev/null; then
          echo "Updating existing container app..."
          az containerapp update \
            --name ${{ env.AZURE_CONTAINER_APP }} \
            --resource-group stacktrend \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --registry-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }}
        else
          echo "Creating new container app..."
          az containerapp create \
            --name ${{ env.AZURE_CONTAINER_APP }} \
            --resource-group stacktrend \
            --environment ${{ env.CONTAINER_ENVIRONMENT }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}/${{ env.IMAGE_NAME }}:latest \
            --registry-server ${{ env.AZURE_CONTAINER_REGISTRY }} \
            --registry-username ${{ secrets.ACR_USERNAME }} \
            --registry-password ${{ secrets.ACR_PASSWORD }} \
            --target-port 80 \
            --ingress external \
            --min-replicas 0 \
            --max-replicas 10 \
            --cpu 0.5 \
            --memory 1Gi
        fi